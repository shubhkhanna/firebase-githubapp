{"version":3,"sources":["components/UserCard.js","components/Repos.js","context/UserContext.js","pages/Home.js","pages/Signin.js","pages/Signup.js","pages/Notfound.js","layout/Footer.js","layout/Header.js","App.js","Config/firebaseConfig.js","serviceWorker.js","index.js"],"names":["UserCard","user","Card","className","src","avatar_url","alt","CardBody","style","fontSize","name","bio","hireable","followers","public_repos","Repos","repos_url","useState","repos","setRepos","fetchRepos","a","Axios","get","data","useEffect","ListGroup","map","repo","ListGroupItem","key","id","language","description","UserContext","createContext","Home","context","useContext","query","setQuery","setUser","fetchDetails","toast","type","uid","Container","Row","Col","md","InputGroup","Input","value","onChange","e","target","placeholder","InputGroupAddon","addonType","Button","onClick","color","to","Signin","email","setEmail","password","setPassword","lg","Form","onSubmit","preventDefault","firebase","auth","signInWithEmailAndPassword","then","res","console","log","catch","err","message","CardHeader","FormGroup","row","Label","for","sm","Signup","createUserWithEmailAndPassword","Notfound","Footer","fluid","tag","Header","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarText","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Link","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","Provider","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.4c67bd0e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nconst UserCard = ({ user }) => {\r\n  return (\r\n    <Card className=\"text-center mt-4 mb-5\">\r\n      <img src={user.avatar_url} className=\"rounded\" alt=\"\" />\r\n      <CardBody>\r\n        <div className=\"text-dark\" style={{ fontSize: \"1.5em\" }}>\r\n          {user.name}\r\n        </div>\r\n        <div className=\"text-dark\">{user.bio}</div>\r\n        <div className=\"text-info\">\r\n          Available for hire: {user.hireable ? \"Yes\" : \"No\"}\r\n        </div>\r\n        <div className=\"text-info\">Followers: {user.followers}</div>\r\n        <div className=\"text-info\">Repos: {user.public_repos}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\n\r\nconst Repos = ({ repos_url }) => {\r\n  const [repos, setRepos] = useState([]);\r\n\r\n  const fetchRepos = async () => {\r\n    const { data } = await Axios.get(repos_url);\r\n    setRepos(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchRepos();\r\n  });\r\n\r\n  return (\r\n    <ListGroup className=\"mb-5 pb-5\">\r\n      {repos.map((repo) => (\r\n        <ListGroupItem key={repo.id}>\r\n          <div\r\n            className=\"text-dark font-weight-bolder pl-2\"\r\n            style={{ fontSize: \"1.2em\" }}\r\n          >\r\n            {repo.name}\r\n          </div>\r\n          <div className=\"pl-2 text-info font-weight-bolder\">\r\n            {repo.language}\r\n          </div>\r\n          <div className=\"text-muted pl-2\">{repo.description}</div>\r\n        </ListGroupItem>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default Repos;\r\n","import { createContext } from \"react\";\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;\r\n","import React, { useState, useContext } from \"react\";\nimport Axios from \"axios\";\n\nimport {\n  Row,\n  Container,\n  Col,\n  Input,\n  Button,\n  InputGroup,\n  InputGroupAddon,\n} from \"reactstrap\";\n\nimport UserCard from \"../components/UserCard\";\nimport Repos from \"../components/Repos\";\nimport { Redirect } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport { toast } from \"react-toastify\";\n\nconst Home = () => {\n  const context = useContext(UserContext);\n  const [query, setQuery] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  const fetchDetails = async () => {\n    try {\n      const { data } = await Axios.get(`https://api.github.com/users/${query}`);\n      setUser(data);\n    } catch (error) {\n      toast(\"User doesn't exists\", { type: \"error\" });\n    }\n  };\n\n  if (!context.user?.uid) {\n    return <Redirect to=\"/signin\" />;\n  }\n\n  return (\n    <Container>\n      <Row className=\" mt-3\">\n        <Col md=\"5\">\n          <InputGroup>\n            <Input\n              type=\"text\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              placeholder=\"Enter the username\"\n            />\n            <InputGroupAddon addonType=\"append\">\n              <Button onClick={fetchDetails} color=\"primary\">\n                Search\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n          {user ? <UserCard user={user} /> : null}\n        </Col>\n        <Col md=\"7\">{user ? <Repos repos_url={user.repos_url} /> : null}</Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport firebase from \"firebase/app\";\r\nimport UserContext from \"../context/UserContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Signin = () => {\r\n  const context = useContext(UserContext);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSignUp = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((res) => {\r\n        console.log(res);\r\n        context.setUser({\r\n          email: res.user.email,\r\n          uid: res.user.uid,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message, {\r\n          type: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSignUp();\r\n  };\r\n\r\n  if (context.user?.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"text-center mt-5 pt-2\">\r\n      <Row>\r\n        <Col lg={6} className=\"offset-lg-3 mt-5\">\r\n          <Card>\r\n            <Form onSubmit={handleSubmit}>\r\n              <CardHeader className=\"bg-dark text-white\">\r\n                SignIn here\r\n              </CardHeader>\r\n              <CardBody>\r\n                <FormGroup row>\r\n                  <Label for=\"email\" sm={3}>\r\n                    Email\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"Enter Your Email Here\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for=\"password\" sm={3}>\r\n                    Password\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      placeholder=\"Enter Your Password Here\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <Button type=\"submit\" color=\"primary\">\r\n                  Sign In\r\n                </Button>\r\n              </CardBody>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport firebase from \"firebase/app\";\r\nimport UserContext from \"../context/UserContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Signup = () => {\r\n  const context = useContext(UserContext);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSignUp = () => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((res) => {\r\n        console.log(res);\r\n        context.setUser({\r\n          email: res.user.email,\r\n          uid: res.user.uid,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message, {\r\n          type: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSignUp();\r\n  };\r\n\r\n  if (context.user?.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"text-center mt-5 pt-2\">\r\n      <Row>\r\n        <Col lg={6} className=\"offset-lg-3 mt-5\">\r\n          <Card>\r\n            <Form onSubmit={handleSubmit}>\r\n              <CardHeader className=\"bg-dark text-white\">\r\n                SignUp here\r\n              </CardHeader>\r\n              <CardBody>\r\n                <FormGroup row>\r\n                  <Label for=\"email\" sm={3}>\r\n                    Email\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"Enter Your Email Here\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for=\"password\" sm={3}>\r\n                    Password\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      placeholder=\"Enter Your Password Here\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <Button type=\"submit\" color=\"primary\">\r\n                  Sign Up\r\n                </Button>\r\n              </CardBody>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\n\r\nconst Notfound = () => {\r\n  return <div>notfound</div>;\r\n};\r\n\r\nexport default Notfound;\r\n","import React from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nconst Footer = () => {\r\n  return (\r\n    <Container\r\n      fluid\r\n      tag=\"footer\"\r\n      className=\"fixed-bottom text-center bg-dark p-3 text-white\"\r\n      style={{ fontSize: \"1.2em\" }}\r\n    >\r\n      Github Search App\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserContext from \"../context/UserContext\";\r\n\r\nconst Header = () => {\r\n  const context = useContext(UserContext);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <Navbar color=\"dark\" light expand=\"md\">\r\n      <NavbarBrand>\r\n        <Link to=\"/\" className=\"text-warning pl-4\">\r\n          GitHub Search App\r\n        </Link>\r\n      </NavbarBrand>\r\n      <NavbarText className=\"text-white text-center\">\r\n        {context.user?.email ? context.user.email : \"\"}\r\n      </NavbarText>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          {context.user ? (\r\n            <NavItem>\r\n              <NavLink\r\n                tag={Link}\r\n                onClick={() => {\r\n                  context.setUser(null);\r\n                }}\r\n                className=\"text-white\"\r\n              >\r\n                Logout\r\n              </NavLink>\r\n            </NavItem>\r\n          ) : (\r\n            <>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/signup\" className=\"text-white pl-4\">\r\n                  SignUp\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/signin\" className=\"text-white pl-4\">\r\n                  SignIn\r\n                </NavLink>\r\n              </NavItem>\r\n            </>\r\n          )}\r\n        </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//react-router\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n//react-toastify\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n//firebase\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n//pages\nimport Home from \"./pages/Home\";\nimport Signin from \"./pages/Signin\";\nimport Signup from \"./pages/Signup\";\nimport Notfound from \"./pages/Notfound\";\nimport UserContext from \"./context/UserContext\";\nimport Footer from \"./layout/Footer\";\nimport Header from \"./layout/Header\";\n\nimport firebaseConfig from \"./Config/firebaseConfig\";\n//init firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n  return (\n    <Router>\n      <ToastContainer />\n      <UserContext.Provider value={{ user, setUser }}>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/signin\" component={Signin} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"*\" component={Notfound} />\n        </Switch>\n        <Footer />\n      </UserContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","export default {\r\n  apiKey: \"AIzaSyAfARmh4Ze1H--oWS18t1Sv7bOjh_oYBXY\",\r\n  authDomain: \"gitapp-b6d0d.firebaseapp.com\",\r\n  databaseURL: \"https://gitapp-b6d0d.firebaseio.com\",\r\n  projectId: \"gitapp-b6d0d\",\r\n  storageBucket: \"gitapp-b6d0d.appspot.com\",\r\n  messagingSenderId: \"727642808823\",\r\n  appId: \"1:727642808823:web:867503a6d76b37f21f0ef2\",\r\n  measurementId: \"G-HZF91FZTMF\",\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}